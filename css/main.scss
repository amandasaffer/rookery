---
# Only the main Sass file needs front matter (the dashes are enough)
---
@charset "utf-8";

$title-sans: "Montserrat", Helvetica, Arial, sans-serif;
$base-font-family: $title-sans;
$base-font-size:   17px;
$base-font-weight: 400;
$small-font-size:  $base-font-size * 0.875;
$base-line-height: 1.5;

$fade:             #E8EEF0;
$nebula:           #C9D7DC;
$airforce:         #5F91A2;
$mirage:           #0C2029;
$gunmetal:         #030D12;
$pelo:             #4CA2C0;
$light:            #F5F8F9;

$spacing-unit:     30px;

$text-color:       $fade;
// $background-color: $gunmetal;
$background-color: #fff;
$brand-color:      #2a7ae2;

$grey-color:       #828282;
$grey-color-light: lighten($grey-color, 40%);
$grey-color-dark:  darken($grey-color, 25%);

// Width of the content area
$content-width:    800px;

$on-palm:          600px;
$on-laptop:        800px;

$red:							#B63D38;
$darkred:					#8F2823;

@mixin media-query($device) {
    @media screen and (max-width: $device) {
        @content;
    }
}

$min: min-width;
$max: max-width;
$xsmall: 0;
$small: 544px;
$medium: 768px;
$large: 992px;
$xlarge: 1200px;

@mixin at-query ($constraint, $viewport1, $viewport2:null) {
  @if $constraint == $min {
    @media screen and ($min: $viewport1) {
      @content;
    }
  } @else if $constraint == $max {
    @media screen and ($max: $viewport1) {
      @content;
    }
  } @else {
    @media screen and ($min: $viewport1) and ($max: $viewport2) {
      @content;
    }
  }
}

@mixin vertical-padding($n) {
  padding-top: $n;
  padding-bottom: $n;
}

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

.transition {
  -webkit-transition:all 0.25s ease-in-out;
  -moz-transition:all 0.25s ease-in-out;
  -o-transition:all 0.25s ease-in-out;
  -ms-transition:all 0.25s ease-in-out;
  transition:all 0.25s ease-in-out;
}

@mixin overlay($r, $g, $b, $alpha) {
	height: 100%;
	width: 100%;
	position: absolute;
	background: rgba($r, $g, $b, $alpha);
}

@mixin buffer-bottom($units) {
  margin-bottom: $units;
}

.centered-text {
  text-align: center;
  margin-left: auto;
  margin-right: auto;
}

@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

.icon {
  display: inline-block;
  margin: 0 auto;
  width: 100px;
  height: 100px;
  fill: $airforce;
  color: #fff;
}

.icon-identity {
  -webkit-transform: rotate(45deg);
  -moz-transform: rotate(45deg);
}

// Import partials from `sass_dir` (defaults to `_sass`)
@import
  "bootstrap/bootstrap",
  "base",
  "layout",
  "syntax-highlighting",
  "grids",
  "cases",
  "app"
;

/**
 *
 * Bootstrap Overrides
 *
 */
.container-fluid {
  padding: 0;
  [class^=col-] { padding: 0; }
}

.col-centered {
    float: none;
    margin: 0 auto;
}

/*  Bootstrap Clearfix */

/*  Tablet  */
@media (min-width:767px){

  /* Column clear fix */
  .col-lg-1:nth-child(12n+1),
  .col-lg-2:nth-child(6n+1),
  .col-lg-3:nth-child(4n+1),
  .col-lg-4:nth-child(3n+1),
  .col-lg-6:nth-child(2n+1),
  .col-md-1:nth-child(12n+1),
  .col-md-2:nth-child(6n+1),
  .col-md-3:nth-child(4n+1),
  .col-md-4:nth-child(3n+1),
  .col-md-6:nth-child(2n+1){
    clear: none;
  }
  .col-sm-1:nth-child(12n+1),
  .col-sm-2:nth-child(6n+1),
  .col-sm-3:nth-child(4n+1),
  .col-sm-4:nth-child(3n+1),
  .col-sm-6:nth-child(2n+1){
    clear: left;
  }
}


/*  Medium Desktop  */
@media (min-width:992px){

  /* Column clear fix */
  .col-lg-1:nth-child(12n+1),
  .col-lg-2:nth-child(6n+1),
  .col-lg-3:nth-child(4n+1),
  .col-lg-4:nth-child(3n+1),
  .col-lg-6:nth-child(2n+1),
  .col-sm-1:nth-child(12n+1),
  .col-sm-2:nth-child(6n+1),
  .col-sm-3:nth-child(4n+1),
  .col-sm-4:nth-child(3n+1),
  .col-sm-6:nth-child(2n+1){
    clear: none;
  }
  .col-md-1:nth-child(12n+1),
  .col-md-2:nth-child(6n+1),
  .col-md-3:nth-child(4n+1),
  .col-md-4:nth-child(3n+1),
  .col-md-6:nth-child(2n+1){
    clear: left;
  }
}


/*  Large Desktop  */
@media (min-width:1200px){

  /* Column clear fix */
  .col-md-1:nth-child(12n+1),
  .col-md-2:nth-child(6n+1),
  .col-md-3:nth-child(4n+1),
  .col-md-4:nth-child(3n+1),
  .col-md-6:nth-child(2n+1),
  .col-sm-1:nth-child(12n+1),
  .col-sm-2:nth-child(6n+1),
  .col-sm-3:nth-child(4n+1),
  .col-sm-4:nth-child(3n+1),
  .col-sm-6:nth-child(2n+1){
    clear: none;
  }
  .col-lg-1:nth-child(12n+1),
  .col-lg-2:nth-child(6n+1),
  .col-lg-3:nth-child(4n+1),
  .col-lg-4:nth-child(3n+1),
  .col-lg-6:nth-child(2n+1){
    clear: left;
  }
}